{"ast":null,"code":"var _jsxFileName = \"/Users/alexma/Desktop/spacetagram/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport { ReactComponent as HeartIcon } from \"./svg/heart-outline.svg\";\nimport { ReactComponent as HomeIcon } from \"./svg/home-outline.svg\";\nimport { ReactComponent as NotificationIcon } from \"./svg/notifications-outline.svg\";\nimport CardComponent from \"./CardComponent\";\nimport useAxiosRequest from \"./hooks/useAxiosRequest\";\nimport logo from \"./profilepic.jpg\";\nimport \"./App.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [date, setDate] = useState(Date.now());\n\n  const setDateHandler = newDate => {\n    const currentDate = new Date().setHours(0, 0, 0, 0);\n    const newDateStart = new Date(newDate).setHours(0, 0, 0, 0);\n\n    if (!moment(newDateStart).isAfter(currentDate)) {\n      setDate(newDate);\n    }\n  };\n\n  const dateFormat = date => {\n    return moment(date).format(\"YYYY-MM-DD\");\n  };\n\n  const requestParams = {\n    url: `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&start_date=2021-12-01&end_date=${dateFormat(date)}`,\n    method: \"GET\"\n  };\n  const [response, error] = useAxiosRequest(requestParams, [date]);\n  console.log(response);\n  let cardComponents;\n\n  if (error === null && response !== null) {\n    if (Array.isArray(response.data)) {\n      cardComponents = response.data.reverse().map(_ref => {\n        let {\n          hdurl,\n          copyright,\n          explanation,\n          title\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(CardComponent, {\n          img: hdurl,\n          title: title,\n          copyright: copyright,\n          explanation: explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      const {\n        hdurl,\n        copyright,\n        explanation,\n        title\n      } = response.data;\n      cardComponents = /*#__PURE__*/_jsxDEV(CardComponent, {\n        img: hdurl,\n        title: title,\n        copyright: copyright,\n        explanation: explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Navbar-title\",\n        children: \" Spacestagram \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Navbar-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(HomeIcon, {\n          className: \"Navbar-button Navbar-button-filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NotificationIcon, {\n          className: \"Navbar-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeartIcon, {\n          className: \"Navbar-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"Navbar-avatar\",\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Datepicker\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        open: true,\n        selected: date,\n        onChange: setDateHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CardComponent-box\",\n      children: cardComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"EinoT1XQVASR3/+viIREJralh/4=\", false, function () {\n  return [useAxiosRequest];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexma/Desktop/spacetagram/src/App.js"],"names":["React","useState","moment","DatePicker","ReactComponent","HeartIcon","HomeIcon","NotificationIcon","CardComponent","useAxiosRequest","logo","App","date","setDate","Date","now","setDateHandler","newDate","currentDate","setHours","newDateStart","isAfter","dateFormat","format","requestParams","url","process","env","REACT_APP_NASA_API_KEY","method","response","error","console","log","cardComponents","Array","isArray","data","reverse","map","hdurl","copyright","explanation","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport { ReactComponent as HeartIcon } from \"./svg/heart-outline.svg\";\nimport { ReactComponent as HomeIcon } from \"./svg/home-outline.svg\";\nimport { ReactComponent as NotificationIcon } from \"./svg/notifications-outline.svg\";\nimport CardComponent from \"./CardComponent\";\nimport useAxiosRequest from \"./hooks/useAxiosRequest\";\nimport logo from \"./profilepic.jpg\";\nimport \"./App.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst App = () => {\n  const [date, setDate] = useState(Date.now());\n\n  const setDateHandler = (newDate) => {\n    const currentDate = new Date().setHours(0, 0, 0, 0);\n    const newDateStart = new Date(newDate).setHours(0, 0, 0, 0);\n    if (!moment(newDateStart).isAfter(currentDate)) {\n      setDate(newDate);\n    }\n  };\n  const dateFormat = (date) => {\n    return moment(date).format(\"YYYY-MM-DD\");\n  };\n\n  const requestParams = {\n    url: `https://api.nasa.gov/planetary/apod?api_key=${\n      process.env.REACT_APP_NASA_API_KEY\n    }&start_date=2021-12-01&end_date=${dateFormat(date)}`,\n    method: \"GET\",\n  };\n\n  const [response, error] = useAxiosRequest(requestParams, [date]);\n\n  console.log(response);\n  let cardComponents;\n  if (error === null && response !== null) {\n    if (Array.isArray(response.data)) {\n      cardComponents = response.data\n        .reverse()\n        .map(({ hdurl, copyright, explanation, title }) => (\n          <CardComponent\n            img={hdurl}\n            title={title}\n            copyright={copyright}\n            explanation={explanation}\n          />\n        ));\n    } else {\n      const { hdurl, copyright, explanation, title } = response.data;\n      cardComponents = (\n        <CardComponent\n          img={hdurl}\n          title={title}\n          copyright={copyright}\n          explanation={explanation}\n        />\n      );\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"Navbar\">\n        <div className=\"Navbar-title\"> Spacestagram </div>\n        <div className=\"Navbar-buttons\">\n          <HomeIcon className=\"Navbar-button Navbar-button-filled\" />\n          <NotificationIcon className=\"Navbar-button\" />\n          <HeartIcon className=\"Navbar-button\" />\n          <img src={logo} className=\"Navbar-avatar\" alt=\"avatar\" />\n        </div>\n      </div>\n      <div className=\"Datepicker\">\n        <DatePicker open selected={date} onChange={setDateHandler} />\n      </div>\n      <div className=\"CardComponent-box\">{cardComponents}</div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}