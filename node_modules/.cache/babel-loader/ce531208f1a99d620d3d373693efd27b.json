{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst requestParams = {\n  url: `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&start_date=${dateFormat(selectedDate)}&end_date=${dateFormat(new Date())}`,\n  method: \"GET\"\n};\n\nconst useBatchedNasaImageQuery = (currBatch, startDate) => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setData([]);\n  }, [startDate]);\n  useEffect(() => {\n    axios({\n      method,\n      url,\n      data,\n      headers\n    }).then(response => {\n      if (response.data && Array.isArray(response.data)) {\n        setData(data.concat(response.data));\n      } else if (response.data) {\n        setData(data.concat([response.data]));\n      }\n    }).catch(error => {\n      setError(error);\n    });\n  });\n  return [data, error];\n};\n\n_s(useBatchedNasaImageQuery, \"1jY+6X/qyDb1CpbaVnLw920c/58=\");\n\nexport default useBatchedNasaImageQuery;","map":{"version":3,"sources":["/Users/alexma/Desktop/spacetagram/src/hooks/useBatchedNasaImageQuery.js"],"names":["useEffect","useState","axios","requestParams","url","process","env","REACT_APP_NASA_API_KEY","dateFormat","selectedDate","Date","method","useBatchedNasaImageQuery","currBatch","startDate","data","setData","error","setError","headers","then","response","Array","isArray","concat","catch"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAG,+CACJC,OAAO,CAACC,GAAR,CAAYC,sBACb,eAAcC,UAAU,CAACC,YAAD,CAAe,aAAYD,UAAU,CAAC,IAAIE,IAAJ,EAAD,CAAa,EAHvD;AAIpBC,EAAAA,MAAM,EAAE;AAJY,CAAtB;;AAOA,MAAMC,wBAAwB,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAAA;;AACzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFQ,EAEN,CAACF,SAAD,CAFM,CAAT;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAAC;AACJS,MAAAA,MADI;AAEJP,MAAAA,GAFI;AAGJW,MAAAA,IAHI;AAIJI,MAAAA;AAJI,KAAD,CAAL,CAMGC,IANH,CAMSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACN,IAAT,IAAiBO,KAAK,CAACC,OAAN,CAAcF,QAAQ,CAACN,IAAvB,CAArB,EAAmD;AACjDC,QAAAA,OAAO,CAACD,IAAI,CAACS,MAAL,CAAYH,QAAQ,CAACN,IAArB,CAAD,CAAP;AACD,OAFD,MAEO,IAAIM,QAAQ,CAACN,IAAb,EAAmB;AACxBC,QAAAA,OAAO,CAACD,IAAI,CAACS,MAAL,CAAY,CAACH,QAAQ,CAACN,IAAV,CAAZ,CAAD,CAAP;AACD;AACF,KAZH,EAaGU,KAbH,CAaUR,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAfH;AAgBD,GAjBQ,CAAT;AAmBA,SAAO,CAACF,IAAD,EAAOE,KAAP,CAAP;AACD,CA5BD;;GAAML,wB;;AA8BN,eAAeA,wBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst requestParams = {\n  url: `https://api.nasa.gov/planetary/apod?api_key=${\n    process.env.REACT_APP_NASA_API_KEY\n  }&start_date=${dateFormat(selectedDate)}&end_date=${dateFormat(new Date())}`,\n  method: \"GET\",\n};\n\nconst useBatchedNasaImageQuery = (currBatch, startDate) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setData([]);\n  }, [startDate]);\n\n  useEffect(() => {\n    axios({\n      method,\n      url,\n      data,\n      headers,\n    })\n      .then((response) => {\n        if (response.data && Array.isArray(response.data)) {\n          setData(data.concat(response.data));\n        } else if (response.data) {\n          setData(data.concat([response.data]));\n        }\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  });\n\n  return [data, error];\n};\n\nexport default useBatchedNasaImageQuery;\n"]},"metadata":{},"sourceType":"module"}