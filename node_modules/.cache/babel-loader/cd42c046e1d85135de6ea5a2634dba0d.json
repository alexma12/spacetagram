{"ast":null,"code":"import moment from \"moment\";\n\nconst getStartOfDate = date => {\n  return new Date(date).setHours(0, 0, 0, 0);\n};\n\nexport const nasaAPIDateFormat = date => {\n  return moment(date).format(\"YYYY-MM-DD\");\n};\nexport const addDaysToDate = (date, days) => {\n  const formattedDate = nasaAPIDateFormat(date);\n  return moment(date, \"YYYY-MM-DD\").add(days, \"days\");\n};\nexport const dateComparison = (date1, date2, comparisonType) => {\n  let startOfDate1 = getStartOfDate(date1);\n  let startOfDate2 = getStartOfDate(date2);\n\n  switch (comparisonType) {\n    case \"equal\":\n      return moment(startOfDate1).isSame(startOfDate2);\n\n    case \"before\":\n      return moment(startOfDate1).isBefore(startOfDate2);\n\n    case \"after\":\n      return moment(startOfDate1).isAfter(startOfDate2);\n\n    default:\n      return false;\n  }\n};","map":{"version":3,"sources":["/Users/alexma/Desktop/spacetagram/src/utils/dateUtils.js"],"names":["moment","getStartOfDate","date","Date","setHours","nasaAPIDateFormat","format","addDaysToDate","days","formattedDate","add","dateComparison","date1","date2","comparisonType","startOfDate1","startOfDate2","isSame","isBefore","isAfter"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/B,SAAO,IAAIC,IAAJ,CAASD,IAAT,EAAeE,QAAf,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,CAAP;AACD,CAFD;;AAGA,OAAO,MAAMC,iBAAiB,GAAIH,IAAD,IAAU;AACzC,SAAOF,MAAM,CAACE,IAAD,CAAN,CAAaI,MAAb,CAAoB,YAApB,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAG,CAACL,IAAD,EAAOM,IAAP,KAAgB;AAC3C,QAAMC,aAAa,GAAGJ,iBAAiB,CAACH,IAAD,CAAvC;AACA,SAAOF,MAAM,CAACE,IAAD,EAAO,YAAP,CAAN,CAA2BQ,GAA3B,CAA+BF,IAA/B,EAAqC,MAArC,CAAP;AACD,CAHM;AAKP,OAAO,MAAMG,cAAc,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,cAAf,KAAkC;AAC9D,MAAIC,YAAY,GAAGd,cAAc,CAACW,KAAD,CAAjC;AACA,MAAII,YAAY,GAAGf,cAAc,CAACY,KAAD,CAAjC;;AACA,UAAQC,cAAR;AACE,SAAK,OAAL;AACE,aAAOd,MAAM,CAACe,YAAD,CAAN,CAAqBE,MAArB,CAA4BD,YAA5B,CAAP;;AACF,SAAK,QAAL;AACE,aAAOhB,MAAM,CAACe,YAAD,CAAN,CAAqBG,QAArB,CAA8BF,YAA9B,CAAP;;AACF,SAAK,OAAL;AACE,aAAOhB,MAAM,CAACe,YAAD,CAAN,CAAqBI,OAArB,CAA6BH,YAA7B,CAAP;;AACF;AACE,aAAO,KAAP;AARJ;AAUD,CAbM","sourcesContent":["import moment from \"moment\";\n\nconst getStartOfDate = (date) => {\n  return new Date(date).setHours(0, 0, 0, 0);\n};\nexport const nasaAPIDateFormat = (date) => {\n  return moment(date).format(\"YYYY-MM-DD\");\n};\n\nexport const addDaysToDate = (date, days) => {\n  const formattedDate = nasaAPIDateFormat(date);\n  return moment(date, \"YYYY-MM-DD\").add(days, \"days\");\n};\n\nexport const dateComparison = (date1, date2, comparisonType) => {\n  let startOfDate1 = getStartOfDate(date1);\n  let startOfDate2 = getStartOfDate(date2);\n  switch (comparisonType) {\n    case \"equal\":\n      return moment(startOfDate1).isSame(startOfDate2);\n    case \"before\":\n      return moment(startOfDate1).isBefore(startOfDate2);\n    case \"after\":\n      return moment(startOfDate1).isAfter(startOfDate2);\n    default:\n      return false;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}