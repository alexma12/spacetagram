{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useAxiosRequest = (_ref, dependenceis) => {\n  _s();\n\n  let {\n    method,\n    url,\n    data = null,\n    headers = null\n  } = _ref;\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios({\n      method,\n      url,\n      data,\n      headers\n    }).then(response => {\n      setResponse(response);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n  return [response, error];\n};\n\n_s(useAxiosRequest, \"92kGcqJmUZHxj5g8slhrA1SfVKo=\");\n\nexport default useAxiosRequest;","map":{"version":3,"sources":["/Users/alexma/Desktop/spacetagram/src/hooks/useAxiosRequest.js"],"names":["useEffect","useState","axios","useAxiosRequest","dependenceis","method","url","data","headers","response","setResponse","error","setError","then","catch"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,OAEtBC,YAFsB,KAGnB;AAAA;;AAAA,MAFH;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,GAAV;AAAeC,IAAAA,IAAI,GAAG,IAAtB;AAA4BC,IAAAA,OAAO,GAAG;AAAtC,GAEG;AACH,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAAC;AACJG,MAAAA,MADI;AAEJC,MAAAA,GAFI;AAGJC,MAAAA,IAHI;AAIJC,MAAAA;AAJI,KAAD,CAAL,CAMGK,IANH,CAMSJ,QAAD,IAAc;AAClBC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KARH,EASGK,KATH,CASUH,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAXH;AAYD,GAbQ,EAaN,EAbM,CAAT;AAeA,SAAO,CAACF,QAAD,EAAWE,KAAX,CAAP;AACD,CAvBD;;GAAMR,e;;AAyBN,eAAeA,eAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useAxiosRequest = (\n  { method, url, data = null, headers = null },\n  dependenceis\n) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    axios({\n      method,\n      url,\n      data,\n      headers,\n    })\n      .then((response) => {\n        setResponse(response);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }, []);\n\n  return [response, error];\n};\n\nexport default useAxiosRequest;\n"]},"metadata":{},"sourceType":"module"}